import sys

def run_test():

    print('########## TESTING Q4c ##########')
    # Test Cases
    tc2_expected  = [[6, 11, 15, 17], [6, 11, 15, 18], [6, 11, 15, 33], [6, 11, 15, 35], [6, 11, 25, 33], [6, 11, 25, 35], [6, 11, 26, 33], [6, 11, 26, 35], [6, 12, 15, 17], [6, 12, 15, 18], [6, 12, 15, 33], [6, 12, 15, 
                    35], [6, 12, 25, 33], [6, 12, 25, 35], [6, 12, 26, 33], [6, 12, 26, 35], [6, 13, 15, 17], [6, 13, 15, 18], [6, 13, 15, 33], [6, 13, 15, 35], [6, 13, 25, 33], [6, 13, 25, 35], [6, 13, 26, 33], [6, 13, 26, 35], [6, 14, 25, 33], [6, 14, 25, 35], [6, 14, 26, 33], [6, 14, 26, 35], [0, 2, 4, 6], [0, 2, 4, 19], [0, 2, 4, 34], [0, 2, 5, 19], [0, 2, 5, 34], [0, 2, 16, 19], [0, 2, 16, 34], [0, 2, 17, 19], [0, 2, 17, 34], [0, 2, 18, 34], [0, 15, 17, 19], [0, 15, 17, 34], [0, 15, 18, 34], [1, 15, 17, 19], [1, 15, 17, 34], [1, 15, 18, 34], [], [6, 9, 21], [6, 9, 22], [6, 20, 22], [0, 2, 7, 9, 31, 33], [0, 2, 7, 9, 31, 35], [0, 2, 7, 9, 32, 35], [0, 2, 7, 20, 
                    31, 33], [0, 2, 7, 20, 31, 35], [0, 2, 7, 20, 32, 35], [0, 2, 7, 29, 31, 33], [0, 2, 7, 29, 31, 35], [0, 2, 7, 29, 32, 35], [0, 2, 7, 30, 32, 35], [0, 2, 27, 29, 31, 33], [0, 2, 27, 29, 31, 35], [0, 2, 27, 29, 32, 35], [0, 2, 27, 30, 32, 35], [0, 2, 28, 30, 32, 35], [0, 15, 27, 29, 31, 33], [0, 15, 27, 29, 31, 35], [0, 15, 27, 29, 32, 35], [0, 15, 27, 30, 32, 35], [0, 15, 28, 30, 32, 35], [0, 25, 27, 29, 31, 33], [0, 25, 27, 29, 31, 35], [0, 25, 27, 29, 32, 35], [0, 25, 27, 30, 32, 35], [0, 25, 28, 30, 32, 35], [0, 26, 28, 30, 32, 35], [1, 15, 27, 29, 31, 33], [1, 15, 27, 29, 31, 35], [1, 15, 27, 29, 32, 35], [1, 15, 27, 30, 32, 35], [1, 15, 28, 
                    30, 32, 35], [1, 25, 27, 29, 31, 33], [1, 25, 27, 29, 31, 35], [1, 25, 27, 29, 32, 35], [1, 25, 27, 30, 32, 35], [1, 25, 28, 30, 32, 35], [1, 26, 28, 30, 32, 35], [23, 25, 27, 29, 31, 33], [23, 25, 27, 29, 31, 35], [23, 25, 27, 29, 32, 35], [23, 25, 27, 30, 32, 35], [23, 25, 28, 30, 32, 35], [23, 26, 28, 30, 32, 35], [24, 26, 28, 30, 32, 35]]
    tc3_expected = [[], [0, 4, 8, 13], [0, 5, 8, 13], [1, 4, 8, 13], [1, 5, 8, 13], [2, 5, 8, 13], [0, 4, 8, 13], [0, 5, 8, 13], [1, 4, 8, 13], [1, 5, 8, 13], [2, 5, 8, 13], [0, 13], [1, 13], [2, 13], [3, 13], [9, 13], 
                    [10, 13], []]
    test_cases = [((['the', 'one', 'ring', 's'], 'theoneringis', 1), [[0, 1, 2], [0, 1, 5], [3, 4, 5], [6, 7, 8, 9], [11]],0.25), # step 1
                # step 2
                ((['star', 'wars', 'luke', 'sky', 'walker'], 'wwarrrslukettttarrrskyywwaallkkeersr', 2), tc2_expected, 0.25),
                # step 3
                ((['y', 'nope', 'nope', 'ne', 'z'], 'nnnnoooopnnnne', 3), tc3_expected, 0.25),
                # big step
                ((['y', 'nope', 'nope', 'ne', 'z'], 'nnnnoooopnnnne', 5), [[], [], [], [0, 13], [1, 13], [2, 13], [3, 13], []], 0.25),]

    # ##########

    total_score = 0.0
    counter = 0
    
    try:
        from q4c import find_all_words

        for (params, expected_result, score) in test_cases:
            print("\nTest Case: find_all_words" + str(params))

            try:
                result = find_all_words(params[0], params[1], params[2])

                print("Expected output: " , expected_result)
                print("Actual output  : " , result)

                if result == expected_result:
                    total_score += score
                    counter += 1
                    print("+" + str(score) + "/" + str(score) + " marks")
                else:
                    print("+0.0/" + str(score) + " marks")

            except:
                print('Exception:', sys.exc_info())
                
    except:
        print('Exception:', sys.exc_info())
    
    total_score = round(total_score, 2)
    print('\nTotal Marks: ' + str(total_score) + " out of 1.0")
   
    return (counter, total_score)

if __name__ == "__main__":
    run_test()